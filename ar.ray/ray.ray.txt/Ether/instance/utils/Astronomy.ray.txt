// TODO Calculate days based on spin, and years based on orbit
// Also https://en.wikipedia.org/wiki/Sidereal_time

class Planet
  `years.name`: Unit
  `days.name`: Unit
end

namespace Earth < Planet
  Calendars.Gregorian.years.reexport
  Calendars.Gregorian.months.reexport
  Calendars.Gregorian.weeks.reexport
  Calendars.Gregorian.days.reexport

  namespace Calendars
    namespace Gregorian < Calendar

      Day = Calendar.Segment ~ "d" | "day" "s"? -> *24 hours
      Unit ~ "w" | "week" "s"? -> Weekday@.count days
      Unit ~ "M" | "month" "s"? -> x => x == 0 ? 0 days : x.sign (&Time.MONTH: Month)[x > 0 ? 0..(x - 1) : x..-1].sum
      Year = Calendar.Segment ~ "y" | "year" "s"? -> Month@.count months
        static EPOCH = 1
      end

      class Weekday < Calendar.Segment @=
        Monday,
        Tuesday,
        Wednesday,
        Thursday,
        Friday,
        Saturday,
        Sunday
        -- .map(= 1 day)~.orbit

        static EPOCH = Monday
      end

      class Month < Calendar.Segment @=
        January = 31 days,
        February = is_leap_year(&Time.YEAR: year) ? 29 : 28 -- days,
        March = 31 days,
        April = 30 days,
        May = 31 days,
        June = 30 days,
        July = 31 days,
        August = 31 days,
        September = 30 days,
        October = 31 days,
        November = 30 days,
        December = 31 days
        -- ~.orbit(&Time.YEAR -= 1 <- -> &Time.YEAR += 1)

        static EPOCH = January
      end

      def is_leap_year YEAR: Decimal = YEAR % 4 == 0 && (YEAR % 100 != 0 || YEAR % 400 == 0)

      //TODO Compiler should be smart enough to not actually go through each iteration, but count the years which are leap years etc. to shortcut it.

        // TODO How to say, possible a minute is 61 seconds if we have a discontinuous leap second

    end
  end

end
Earth.years.reexport
Earth.months.reexport
Earth.weeks.reexport
Earth.days.reexport
{ Weekday, Month } = Earth.Calendars.Gregorian

namespace Mars < Planet
  Unit ~ years.name | "Martian `years.name`" -> *668.5991 sols //TODO Is there a notion of a martian leap year? - discrete step
  Unit ~ days.name | "Martian `days.name``" | "sol" "s"? -> 1 Earth.day 39 minutes 35.244 seconds
end
