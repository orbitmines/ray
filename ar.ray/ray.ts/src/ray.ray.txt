// Defined by context:
//  external = { def, do, goto }
//  local
//  caller (= local) TODO Or is it nil
//  constructor (= local) = { name = "<text file name or nil>", definer (= local) } TODO Or is is nil?
//  definer (= local) TODO Or is it nil

//TODO Somehow define METHOD_NAME= without def.
def = external[constructor.name]
def do(&program) = external[constructor.name]
def goto(location) = external[constructor.name]

global = local

def class name <...targs> (...args, &program)
  return def `name` <...targs> (...args)
    static = local.constructor
    this = local

    program(local: this)

    return this
  end
end

